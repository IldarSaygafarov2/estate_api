"""fixes

Revision ID: a0a79b5398a4
Revises: 01e8f3f57814
Create Date: 2024-11-25 18:02:52.135264

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a0a79b5398a4'
down_revision: Union[str, None] = '01e8f3f57814'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('estates', sa.Column('balcony', sa.String(), nullable=True))
    op.add_column('estates', sa.Column('condition', sa.String(), nullable=True))
    op.add_column('estates', sa.Column('district', sa.String(), nullable=True))
    op.add_column('estates', sa.Column('room', sa.String(), nullable=True))
    op.add_column('estates', sa.Column('floor', sa.String(), nullable=True))
    op.add_column('estates', sa.Column('storey', sa.String(), nullable=True))
    op.add_column('estates', sa.Column('type', sa.String(), nullable=True))
    op.drop_constraint('estates_district_id_fkey', 'estates', type_='foreignkey')
    op.drop_constraint('estates_floor_id_fkey', 'estates', type_='foreignkey')
    op.drop_constraint('estates_balcony_id_fkey', 'estates', type_='foreignkey')
    op.drop_constraint('estates_condition_id_fkey', 'estates', type_='foreignkey')
    op.drop_constraint('estates_type_id_fkey', 'estates', type_='foreignkey')
    op.drop_constraint('estates_room_id_fkey', 'estates', type_='foreignkey')
    op.drop_constraint('estates_storey_id_fkey', 'estates', type_='foreignkey')
    op.drop_column('estates', 'room_id')
    op.drop_column('estates', 'storey_id')
    op.drop_column('estates', 'balcony_id')
    op.drop_column('estates', 'condition_id')
    op.drop_column('estates', 'district_id')
    op.drop_column('estates', 'type_id')
    op.drop_column('estates', 'floor_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('estates', sa.Column('floor_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('estates', sa.Column('type_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('estates', sa.Column('district_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('estates', sa.Column('condition_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('estates', sa.Column('balcony_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('estates', sa.Column('storey_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('estates', sa.Column('room_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('estates_storey_id_fkey', 'estates', 'storeys', ['storey_id'], ['id'])
    op.create_foreign_key('estates_room_id_fkey', 'estates', 'rooms', ['room_id'], ['id'])
    op.create_foreign_key('estates_type_id_fkey', 'estates', 'types', ['type_id'], ['id'])
    op.create_foreign_key('estates_condition_id_fkey', 'estates', 'conditions', ['condition_id'], ['id'])
    op.create_foreign_key('estates_balcony_id_fkey', 'estates', 'balconies', ['balcony_id'], ['id'])
    op.create_foreign_key('estates_floor_id_fkey', 'estates', 'floors', ['floor_id'], ['id'])
    op.create_foreign_key('estates_district_id_fkey', 'estates', 'districts', ['district_id'], ['id'])
    op.drop_column('estates', 'type')
    op.drop_column('estates', 'storey')
    op.drop_column('estates', 'floor')
    op.drop_column('estates', 'room')
    op.drop_column('estates', 'district')
    op.drop_column('estates', 'condition')
    op.drop_column('estates', 'balcony')
    # ### end Alembic commands ###
